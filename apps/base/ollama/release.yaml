apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openwebui-release
  namespace: ollama
spec:
  interval: 1h
  releaseName: openwebui
  targetNamespace: ollama
  chart:
    spec:
      chart: open-webui
      version: 7.2.0
      sourceRef:
        kind: HelmRepository
        name: open-webui
        namespace: flux-system
  values:
    image:
      repository: "ghcr.io/open-webui/open-webui"
      tag: "main"

    replicaCount: 1

    ingress:
      enabled: true
      class: internal-ingress
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        cert-manager.io/cluster-issuer: letsencrypt-production
      host: chat.from-gondor.com
      tls: true

    persistence:
      storageClass: "longhorn-default-sc"
      size: 10Gi

    ollama:
      enabled: false

    pipelines:
      enabled: false
      
    ollamaUrls:
      - http://ollama-proxy.ollama.svc.cluster.local
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ollama-proxy-release
  namespace: ollama
spec:
  interval: 1h
  releaseName: ollama-proxy
  targetNamespace: ollama
  chartRef:
    kind: HelmChart
    name: one-chart
    namespace: flux-system
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    homelab:
      category: proxy
      realm: network

    nameOverride: ollama-proxy

    image:
      repository: nginxinc/nginx-unprivileged
      tag: alpine@sha256:285b776f6694a03fce74d62d38876311d759a40b0d54b5b2bf0113701bc2edb6

    replicaCount: 4

    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 50%

    dns:
      enabled: true
      config:
        nameservers:
          - 192.168.68.201
          - 192.168.68.116

    volumes:
      - name: nginx-conf
        configMap:
          name: ollama-proxy-nginx-conf

    volumeMounts:
      - name: nginx-conf
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf

    service:
      type: LoadBalancer
      ports:
        - name: http
          port: 80
          containerPort: 80
        - name: management
          port: 9091
          containerPort: 9091

    resources:
      limits:
        cpu: 500m
        memory: 500Mi
      requests:
        cpu: 50m
        memory: 128Mi

    livenessProbe:
      httpGet:
        path: /api/health
        port: management
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 10

    readinessProbe:
      httpGet:
        path: /api/health
        port: management
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      failureThreshold: 10
