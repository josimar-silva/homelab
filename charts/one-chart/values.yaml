# -- Homelab settings
homelab:
  # -- Homelab category label. Defaults to "apps".
  category: apps
  # -- Homelab realm label. Defaults to "playground".
  realm: playground

# -- Number of replicas for the deployment
replicaCount: 1

image:
  # -- Container image repository
  repository: nginx
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion
  tag: ""

# -- Image pull secrets for private registries
imagePullSecrets: []

# -- Override the chart name
nameOverride: ""

# -- Override the full resource name
fullnameOverride: ""

# -- Environment variables for the deployment
environmentVariables:
#   -- Container environment variables
  container:
#     -- Enabled environment variables at the container level
    enabled: false
#     -- Environment variables to set in the container
#     variables:
#       - name: AN_ENVIRONMENT_VARIABLE
#         value: "potato"
#       - name: ANOTHER_ENVIRONMENT_VARIABLE 
#         value: "other potato"
#   -- Environment variables from secrets
  fromSecret:
#     -- Enabled environment variables from secrets
    enabled: false
#     -- List with the name of the secrets to mount as environment variables
#     secrets:
#       - some-secret
#   -- Environment variables from config maps
  fromConfigMap:
#     -- Enabled environment variables from config maps
    enabled: false
#     -- List with the name of the config maps to mount as environment variables
#     configMaps: 
#       - some-configmap

# -- Annotations for the pod
podAnnotations: {}

# -- Additional labels for the pod
podLabels: {}

# -- Pod-level security context
podSecurityContext: {}
  # -- fsGroup: 2000

# -- Container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes service type. Defaults to ClusterIP.
  type: ClusterIP
  # -- LoadBalancer IP (for MetalLB or cloud LB)
  # loadBalancerIP: ""
  # -- MetalLB IP pool name
  # ipPool: ""
  # -- Service port. Defaults to 80. Kept for backward compatibility. Use `ports` for multiple ports.
  port: 80
  # -- Service ports. Takes precedence over `service.port`.
  ports: []
    # - name: http
    #   port: 80
    #   containerPort: 80
    #   protocol: TCP
    # - name: metrics
    #   port: 9091
    #   containerPort: 9091
    #   protocol: TCP
  # -- Annotations for the service
  annotations: {}

prometheus:
  # -- Enable Prometheus scraping
  enabled: false
  # -- Port to scrape metrics from
  port: 80
  # -- Path to scrape metrics from
  path: /metrics
  # -- Interval at which to scrape metrics
  interval: 30s
  # -- Scrape timeout
  scrapeTimeout: 10s

internalIngress:
  # -- Enable internal ingress
  enabled: false
  # -- Ingress class name. Defaults to "internal-ingress"
  className: internal-ingress
  # -- Annotations for the ingress
  annotations: {}
    # -- kubernetes.io/tls-acme: "true"
  # -- Ingress hosts and paths
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          port: http
  # -- TLS configuration for ingress
  # -- tls:
    # -- Secret name for TLS certificate
    # secretName: chart-example-tls
    # -- cert-manager ClusterIssuer
    # clusterIssuer: letsencrypt-staging
    # -- Hosts for the TLS certificate
    # hosts:
    #   - chart-example.local

# -- DNS configuration for the application
dns:
  #   -- Enable DNS configuration
  enabled: false
  #   -- DNS policy. Defaults to ClusterFirst
  #   policy: ClusterFirst
  #   -- DNS configuration
  # config:
  #   nameservers:
  #     - 8.8.8.8
  #     - 8.8.4.4
  #   searches:
  #     - my-svc.namespace.svc.cluster.local
  #   options:
  #     - name: ndots
  #       value: '5'

# -- Resource requests and limits
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness probe configuration
# livenessProbe:
#   httpGet:
#     path: /
#     port: http

# -- Readiness probe configuration
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# -- Additional volumes for the pod
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volume mounts for the container
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

persistentVolume:
  # -- Enable persistent volume claim
  enabled: false
  # -- Storage class for PVC. Defaults to "longhorn-default-sc"
  storageClass: "longhorn-default-sc"
  # -- Access modes for PVC. Defaults to ReadWriteOnce
  accessModes:
    - ReadWriteOnce
  # -- Size of the persistent volume. Defaults to 1Gi
  size: 1Gi
  # -- Mount path for the persistent volume. Defaults to /data
  mountPath: /data

# -- 1Password integration settings
onepassword:
  # -- Enable creating a OnePasswordItem to generate a Kubernetes Secret.
  enabled: false
  # -- The name of the 1Password vault.
  vault: "Homelab"
  # -- The name of the item within the vault.
  item: ""
  # -- The name of the Kubernetes Secret to be created by the operator. Defaults to <Release Name>-onepassword.
  secretName: ""

# -- Node selector for pod scheduling
nodeSelector: {}

# -- Tolerations for pod scheduling
tolerations: []

# -- Affinity rules for pod scheduling
affinity: {}


# -- Deployment strategy
strategy: {}

# -- Cloudflared settings
cloudflared:
  # -- Enable Cloudflared deployment
  enabled: false
  # -- Number of replicas for the Cloudflared deployment
  replicaCount: 2
  # -- Cloudflared image repository
  image:
    repository: cloudflare/cloudflared
    tag: 2025.7.0
  # -- Deployment strategy
  strategy:
    type: Recreate
  # -- Annotations for the Cloudflared pod
  podAnnotations: {}
  # -- Additional labels for the Cloudflared pod
  podLabels: {}
  # -- Tunnel configuration
  tunnel:
    # -- Name of the Cloudflare tunnel
    name: ""
    # -- Public hostname for the tunnel
    publicHostname: ""
    # -- Local service hostname to expose through the tunnel
    localHostname: ""
  # -- 1Password integration settings for Cloudflared credentials
  onepassword:
    # -- The name of the 1Password vault where Cloudflared credentials are stored
    vault: "Homelab"
    # -- The name of the item within the vault containing Cloudflared credentials
    item: ""
  # -- Prometheus settings for Cloudflared
  prometheus:
    # -- Enable Prometheus scraping for Cloudflared
    enabled: false
    # -- Port to scrape metrics from for Cloudflared
    port: 2000
    # -- Path to scrape metrics from for Cloudflared
    path: /metrics
    # -- Interval at which to scrape metrics for Cloudflared
    interval: 30s
    # -- Scrape timeout for Cloudflared
    scrapeTimeout: 10s
